{"version":3,"sources":["/home/users/ajeet.kumar/www/html/pos-test/wp-content/plugins/woo-point-of-sale/packages/navigation/src/filters.js"],"names":["compact","find","get","omit","flattenFilters","filters","allFilters","forEach","f","subFilters","push","getActiveFiltersFromQuery","query","config","Object","keys","map","configKey","filter","rules","match","rule","hasOwnProperty","getUrlKey","value","key","getDefaultOptionValue","options","defaultOption","input","option","console","warn","labels","add","undefined","getQueryFromActiveFilters","activeFilters","previousFilters","previousData","reduce","data","nextData","Array","isArray","some","length"],"mappings":"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","sourcesContent":["/** @format */\n/**\n * External dependencies\n */\nimport { compact, find, get, omit } from 'lodash';\n\n/**\n * Collapse an array of filter values with subFilters into a 1-dimensional array.\n *\n * @param {Array} filters Set of filters with possible subfilters.\n * @return {Array} Flattened array of all filters.\n */\nexport function flattenFilters( filters ) {\n\tconst allFilters = [];\n\tfilters.forEach( f => {\n\t\tif ( ! f.subFilters ) {\n\t\t\tallFilters.push( f );\n\t\t} else {\n\t\t\tallFilters.push( omit( f, 'subFilters' ) );\n\t\t\tconst subFilters = flattenFilters( f.subFilters );\n\t\t\tallFilters.push( ...subFilters );\n\t\t}\n\t} );\n\treturn allFilters;\n}\n\n/**\n * Describe activeFilter object.\n *\n * @typedef {Object} activeFilter\n * @property {string} key - filter key.\n * @property {string} [rule] - a modifying rule for a filter, eg 'includes' or 'is_not'.\n * @property {string} value - filter value(s).\n */\n\n/**\n * Given a query object, return an array of activeFilters, if any.\n *\n * @param {object} query - query oject\n * @param {object} config - config object\n * @return {activeFilters[]} - array of activeFilters\n */\nexport function getActiveFiltersFromQuery( query, config ) {\n\treturn compact(\n\t\tObject.keys( config ).map( configKey => {\n\t\t\tconst filter = config[ configKey ];\n\t\t\tif ( filter.rules ) {\n\t\t\t\tconst match = find( filter.rules, rule => {\n\t\t\t\t\treturn query.hasOwnProperty( getUrlKey( configKey, rule.value ) );\n\t\t\t\t} );\n\n\t\t\t\tif ( match ) {\n\t\t\t\t\tconst value = query[ getUrlKey( configKey, match.value ) ];\n\t\t\t\t\treturn {\n\t\t\t\t\t\tkey: configKey,\n\t\t\t\t\t\trule: match.value,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ( query[ configKey ] ) {\n\t\t\t\treturn {\n\t\t\t\t\tkey: configKey,\n\t\t\t\t\tvalue: query[ configKey ],\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn null;\n\t\t} )\n\t);\n}\n\n/**\n * Get the default option's value from the configuration object for a given filter. The first\n * option is used as default if no `defaultOption` is provided.\n *\n * @param {object} config - a filter config object.\n * @param {array} options - select options.\n * @return {string|undefined}  - the value of the default option.\n */\nexport function getDefaultOptionValue( config, options ) {\n\tconst { defaultOption } = config.input;\n\tif ( config.input.defaultOption ) {\n\t\tconst option = find( options, { value: defaultOption } );\n\t\tif ( ! option ) {\n\t\t\t/* eslint-disable no-console */\n\t\t\tconsole.warn( `invalid defaultOption ${ defaultOption } supplied to ${ config.labels.add }` );\n\t\t\t/* eslint-enable */\n\t\t\treturn undefined;\n\t\t}\n\t\treturn option.value;\n\t}\n\treturn get( options, [ 0, 'value' ] );\n}\n\n/**\n * Given activeFilters, create a new query object to update the url. Use previousFilters to\n * Remove unused params.\n *\n * @param {activeFilters[]} activeFilters - activeFilters shown in the UI\n * @param {object} query - the current url query object\n * @param {object} config - config object\n * @return {object} - query object representing the new parameters\n */\nexport function getQueryFromActiveFilters( activeFilters, query, config ) {\n\tconst previousFilters = getActiveFiltersFromQuery( query, config );\n\tconst previousData = previousFilters.reduce( ( data, filter ) => {\n\t\tdata[ getUrlKey( filter.key, filter.rule ) ] = undefined;\n\t\treturn data;\n\t}, {} );\n\tconst nextData = activeFilters.reduce( ( data, filter ) => {\n\t\tif (\n\t\t\t'between' === filter.rule &&\n\t\t\t( ! Array.isArray( filter.value ) || filter.value.some( value => ! value ) )\n\t\t) {\n\t\t\treturn data;\n\t\t}\n\n\t\tif ( filter.value ) {\n\t\t\tdata[ getUrlKey( filter.key, filter.rule ) ] = filter.value;\n\t\t}\n\t\treturn data;\n\t}, {} );\n\n\treturn { ...previousData, ...nextData };\n}\n\n/**\n * Get the url query key from the filter key and rule.\n *\n * @param {string} key - filter key.\n * @param {string} rule - filter rule.\n * @return {string} - url query key.\n */\nexport function getUrlKey(key, rule) {\n\tif ( rule && rule.length ) {\n\t\treturn `${ key }_${ rule }`;\n\t}\n\treturn key;\n}\n"]}